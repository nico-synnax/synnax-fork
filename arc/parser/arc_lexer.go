// Code generated from ArcLexer.g4 by ANTLR 4.13.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type ArcLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var ArcLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func arclexerLexerInit() {
	staticData := &ArcLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'func'", "'task'", "'if'", "'else'", "'return'", "'now'", "'len'",
		"'chan'", "'<-chan'", "'->chan'", "'i8'", "'i16'", "'i32'", "'i64'",
		"'u8'", "'u16'", "'u32'", "'u64'", "'f32'", "'f64'", "'string'", "'timestamp'",
		"'timespan'", "'series'", "'->'", "'<-'", "':='", "'$='", "'='", "'+'",
		"'-'", "'*'", "'/'", "'%'", "'^'", "'=='", "'!='", "'<'", "'>'", "'<='",
		"'>='", "'&&'", "'||'", "'!'", "'('", "')'", "'{'", "'}'", "'['", "']'",
		"','", "':'", "';'",
	}
	staticData.SymbolicNames = []string{
		"", "FUNC", "TASK", "IF", "ELSE", "RETURN", "NOW", "LEN", "CHAN", "RECV_CHAN",
		"SEND_CHAN", "I8", "I16", "I32", "I64", "U8", "U16", "U32", "U64", "F32",
		"F64", "STRING", "TIMESTAMP", "TIMESPAN", "SERIES", "ARROW", "RECV",
		"DECLARE", "STATE_DECLARE", "ASSIGN", "PLUS", "MINUS", "STAR", "SLASH",
		"PERCENT", "CARET", "EQ", "NEQ", "LT", "GT", "LEQ", "GEQ", "AND", "OR",
		"NOT", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACKET", "RBRACKET",
		"COMMA", "COLON", "SEMICOLON", "TEMPORAL_LITERAL", "FREQUENCY_LITERAL",
		"INTEGER_LITERAL", "FLOAT_LITERAL", "STRING_LITERAL", "IDENTIFIER",
		"SINGLE_LINE_COMMENT", "MULTI_LINE_COMMENT", "WS",
	}
	staticData.RuleNames = []string{
		"FUNC", "TASK", "IF", "ELSE", "RETURN", "NOW", "LEN", "CHAN", "RECV_CHAN",
		"SEND_CHAN", "I8", "I16", "I32", "I64", "U8", "U16", "U32", "U64", "F32",
		"F64", "STRING", "TIMESTAMP", "TIMESPAN", "SERIES", "ARROW", "RECV",
		"DECLARE", "STATE_DECLARE", "ASSIGN", "PLUS", "MINUS", "STAR", "SLASH",
		"PERCENT", "CARET", "EQ", "NEQ", "LT", "GT", "LEQ", "GEQ", "AND", "OR",
		"NOT", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACKET", "RBRACKET",
		"COMMA", "COLON", "SEMICOLON", "DIGITS", "DIGIT", "TEMPORAL_LITERAL",
		"FREQUENCY_LITERAL", "INTEGER_LITERAL", "FLOAT_LITERAL", "STRING_LITERAL",
		"ESCAPE_SEQUENCE", "IDENTIFIER", "SINGLE_LINE_COMMENT", "MULTI_LINE_COMMENT",
		"WS",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 62, 439, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1,
		4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1,
		6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1,
		8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10,
		1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1,
		13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16,
		1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1,
		18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20,
		1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1,
		21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23,
		1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 25, 1,
		25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29,
		1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1,
		34, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38,
		1, 39, 1, 39, 1, 39, 1, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 42, 1,
		42, 1, 42, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1, 46, 1, 47,
		1, 47, 1, 48, 1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1, 52, 1,
		52, 1, 53, 4, 53, 324, 8, 53, 11, 53, 12, 53, 325, 1, 54, 1, 54, 1, 55,
		1, 55, 1, 55, 1, 55, 3, 55, 334, 8, 55, 1, 55, 1, 55, 3, 55, 338, 8, 55,
		1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 3, 55, 347, 8, 55, 1,
		56, 1, 56, 1, 56, 1, 56, 3, 56, 353, 8, 56, 1, 56, 1, 56, 3, 56, 357, 8,
		56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 3, 56, 367,
		8, 56, 1, 57, 1, 57, 1, 58, 1, 58, 1, 58, 3, 58, 374, 8, 58, 1, 58, 1,
		58, 3, 58, 378, 8, 58, 1, 59, 1, 59, 1, 59, 5, 59, 383, 8, 59, 10, 59,
		12, 59, 386, 9, 59, 1, 59, 1, 59, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1,
		60, 1, 60, 1, 60, 1, 60, 3, 60, 399, 8, 60, 1, 61, 1, 61, 5, 61, 403, 8,
		61, 10, 61, 12, 61, 406, 9, 61, 1, 62, 1, 62, 1, 62, 1, 62, 5, 62, 412,
		8, 62, 10, 62, 12, 62, 415, 9, 62, 1, 62, 1, 62, 1, 63, 1, 63, 1, 63, 1,
		63, 5, 63, 423, 8, 63, 10, 63, 12, 63, 426, 9, 63, 1, 63, 1, 63, 1, 63,
		1, 63, 1, 63, 1, 64, 4, 64, 434, 8, 64, 11, 64, 12, 64, 435, 1, 64, 1,
		64, 1, 424, 0, 65, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17,
		9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35,
		18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53,
		27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71,
		36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 44, 89,
		45, 91, 46, 93, 47, 95, 48, 97, 49, 99, 50, 101, 51, 103, 52, 105, 53,
		107, 0, 109, 0, 111, 54, 113, 55, 115, 56, 117, 57, 119, 58, 121, 0, 123,
		59, 125, 60, 127, 61, 129, 62, 1, 0, 13, 1, 0, 48, 57, 3, 0, 104, 104,
		109, 109, 115, 115, 2, 0, 72, 72, 104, 104, 2, 0, 90, 90, 122, 122, 2,
		0, 75, 75, 107, 107, 2, 0, 77, 77, 109, 109, 4, 0, 10, 10, 13, 13, 34,
		34, 92, 92, 7, 0, 34, 34, 92, 92, 98, 98, 102, 102, 110, 110, 114, 114,
		116, 116, 3, 0, 48, 57, 65, 70, 97, 102, 3, 0, 65, 90, 95, 95, 97, 122,
		4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 2, 0, 10, 10, 13, 13, 3, 0, 9, 10,
		13, 13, 32, 32, 456, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0,
		0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0,
		0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1,
		0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29,
		1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0,
		37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0,
		0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0,
		0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0,
		0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1,
		0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75,
		1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0,
		83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0,
		0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0,
		0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1,
		0, 0, 0, 0, 111, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 0,
		117, 1, 0, 0, 0, 0, 119, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0, 0, 125, 1, 0,
		0, 0, 0, 127, 1, 0, 0, 0, 0, 129, 1, 0, 0, 0, 1, 131, 1, 0, 0, 0, 3, 136,
		1, 0, 0, 0, 5, 141, 1, 0, 0, 0, 7, 144, 1, 0, 0, 0, 9, 149, 1, 0, 0, 0,
		11, 156, 1, 0, 0, 0, 13, 160, 1, 0, 0, 0, 15, 164, 1, 0, 0, 0, 17, 169,
		1, 0, 0, 0, 19, 176, 1, 0, 0, 0, 21, 183, 1, 0, 0, 0, 23, 186, 1, 0, 0,
		0, 25, 190, 1, 0, 0, 0, 27, 194, 1, 0, 0, 0, 29, 198, 1, 0, 0, 0, 31, 201,
		1, 0, 0, 0, 33, 205, 1, 0, 0, 0, 35, 209, 1, 0, 0, 0, 37, 213, 1, 0, 0,
		0, 39, 217, 1, 0, 0, 0, 41, 221, 1, 0, 0, 0, 43, 228, 1, 0, 0, 0, 45, 238,
		1, 0, 0, 0, 47, 247, 1, 0, 0, 0, 49, 254, 1, 0, 0, 0, 51, 257, 1, 0, 0,
		0, 53, 260, 1, 0, 0, 0, 55, 263, 1, 0, 0, 0, 57, 266, 1, 0, 0, 0, 59, 268,
		1, 0, 0, 0, 61, 270, 1, 0, 0, 0, 63, 272, 1, 0, 0, 0, 65, 274, 1, 0, 0,
		0, 67, 276, 1, 0, 0, 0, 69, 278, 1, 0, 0, 0, 71, 280, 1, 0, 0, 0, 73, 283,
		1, 0, 0, 0, 75, 286, 1, 0, 0, 0, 77, 288, 1, 0, 0, 0, 79, 290, 1, 0, 0,
		0, 81, 293, 1, 0, 0, 0, 83, 296, 1, 0, 0, 0, 85, 299, 1, 0, 0, 0, 87, 302,
		1, 0, 0, 0, 89, 304, 1, 0, 0, 0, 91, 306, 1, 0, 0, 0, 93, 308, 1, 0, 0,
		0, 95, 310, 1, 0, 0, 0, 97, 312, 1, 0, 0, 0, 99, 314, 1, 0, 0, 0, 101,
		316, 1, 0, 0, 0, 103, 318, 1, 0, 0, 0, 105, 320, 1, 0, 0, 0, 107, 323,
		1, 0, 0, 0, 109, 327, 1, 0, 0, 0, 111, 337, 1, 0, 0, 0, 113, 356, 1, 0,
		0, 0, 115, 368, 1, 0, 0, 0, 117, 377, 1, 0, 0, 0, 119, 379, 1, 0, 0, 0,
		121, 398, 1, 0, 0, 0, 123, 400, 1, 0, 0, 0, 125, 407, 1, 0, 0, 0, 127,
		418, 1, 0, 0, 0, 129, 433, 1, 0, 0, 0, 131, 132, 5, 102, 0, 0, 132, 133,
		5, 117, 0, 0, 133, 134, 5, 110, 0, 0, 134, 135, 5, 99, 0, 0, 135, 2, 1,
		0, 0, 0, 136, 137, 5, 116, 0, 0, 137, 138, 5, 97, 0, 0, 138, 139, 5, 115,
		0, 0, 139, 140, 5, 107, 0, 0, 140, 4, 1, 0, 0, 0, 141, 142, 5, 105, 0,
		0, 142, 143, 5, 102, 0, 0, 143, 6, 1, 0, 0, 0, 144, 145, 5, 101, 0, 0,
		145, 146, 5, 108, 0, 0, 146, 147, 5, 115, 0, 0, 147, 148, 5, 101, 0, 0,
		148, 8, 1, 0, 0, 0, 149, 150, 5, 114, 0, 0, 150, 151, 5, 101, 0, 0, 151,
		152, 5, 116, 0, 0, 152, 153, 5, 117, 0, 0, 153, 154, 5, 114, 0, 0, 154,
		155, 5, 110, 0, 0, 155, 10, 1, 0, 0, 0, 156, 157, 5, 110, 0, 0, 157, 158,
		5, 111, 0, 0, 158, 159, 5, 119, 0, 0, 159, 12, 1, 0, 0, 0, 160, 161, 5,
		108, 0, 0, 161, 162, 5, 101, 0, 0, 162, 163, 5, 110, 0, 0, 163, 14, 1,
		0, 0, 0, 164, 165, 5, 99, 0, 0, 165, 166, 5, 104, 0, 0, 166, 167, 5, 97,
		0, 0, 167, 168, 5, 110, 0, 0, 168, 16, 1, 0, 0, 0, 169, 170, 5, 60, 0,
		0, 170, 171, 5, 45, 0, 0, 171, 172, 5, 99, 0, 0, 172, 173, 5, 104, 0, 0,
		173, 174, 5, 97, 0, 0, 174, 175, 5, 110, 0, 0, 175, 18, 1, 0, 0, 0, 176,
		177, 5, 45, 0, 0, 177, 178, 5, 62, 0, 0, 178, 179, 5, 99, 0, 0, 179, 180,
		5, 104, 0, 0, 180, 181, 5, 97, 0, 0, 181, 182, 5, 110, 0, 0, 182, 20, 1,
		0, 0, 0, 183, 184, 5, 105, 0, 0, 184, 185, 5, 56, 0, 0, 185, 22, 1, 0,
		0, 0, 186, 187, 5, 105, 0, 0, 187, 188, 5, 49, 0, 0, 188, 189, 5, 54, 0,
		0, 189, 24, 1, 0, 0, 0, 190, 191, 5, 105, 0, 0, 191, 192, 5, 51, 0, 0,
		192, 193, 5, 50, 0, 0, 193, 26, 1, 0, 0, 0, 194, 195, 5, 105, 0, 0, 195,
		196, 5, 54, 0, 0, 196, 197, 5, 52, 0, 0, 197, 28, 1, 0, 0, 0, 198, 199,
		5, 117, 0, 0, 199, 200, 5, 56, 0, 0, 200, 30, 1, 0, 0, 0, 201, 202, 5,
		117, 0, 0, 202, 203, 5, 49, 0, 0, 203, 204, 5, 54, 0, 0, 204, 32, 1, 0,
		0, 0, 205, 206, 5, 117, 0, 0, 206, 207, 5, 51, 0, 0, 207, 208, 5, 50, 0,
		0, 208, 34, 1, 0, 0, 0, 209, 210, 5, 117, 0, 0, 210, 211, 5, 54, 0, 0,
		211, 212, 5, 52, 0, 0, 212, 36, 1, 0, 0, 0, 213, 214, 5, 102, 0, 0, 214,
		215, 5, 51, 0, 0, 215, 216, 5, 50, 0, 0, 216, 38, 1, 0, 0, 0, 217, 218,
		5, 102, 0, 0, 218, 219, 5, 54, 0, 0, 219, 220, 5, 52, 0, 0, 220, 40, 1,
		0, 0, 0, 221, 222, 5, 115, 0, 0, 222, 223, 5, 116, 0, 0, 223, 224, 5, 114,
		0, 0, 224, 225, 5, 105, 0, 0, 225, 226, 5, 110, 0, 0, 226, 227, 5, 103,
		0, 0, 227, 42, 1, 0, 0, 0, 228, 229, 5, 116, 0, 0, 229, 230, 5, 105, 0,
		0, 230, 231, 5, 109, 0, 0, 231, 232, 5, 101, 0, 0, 232, 233, 5, 115, 0,
		0, 233, 234, 5, 116, 0, 0, 234, 235, 5, 97, 0, 0, 235, 236, 5, 109, 0,
		0, 236, 237, 5, 112, 0, 0, 237, 44, 1, 0, 0, 0, 238, 239, 5, 116, 0, 0,
		239, 240, 5, 105, 0, 0, 240, 241, 5, 109, 0, 0, 241, 242, 5, 101, 0, 0,
		242, 243, 5, 115, 0, 0, 243, 244, 5, 112, 0, 0, 244, 245, 5, 97, 0, 0,
		245, 246, 5, 110, 0, 0, 246, 46, 1, 0, 0, 0, 247, 248, 5, 115, 0, 0, 248,
		249, 5, 101, 0, 0, 249, 250, 5, 114, 0, 0, 250, 251, 5, 105, 0, 0, 251,
		252, 5, 101, 0, 0, 252, 253, 5, 115, 0, 0, 253, 48, 1, 0, 0, 0, 254, 255,
		5, 45, 0, 0, 255, 256, 5, 62, 0, 0, 256, 50, 1, 0, 0, 0, 257, 258, 5, 60,
		0, 0, 258, 259, 5, 45, 0, 0, 259, 52, 1, 0, 0, 0, 260, 261, 5, 58, 0, 0,
		261, 262, 5, 61, 0, 0, 262, 54, 1, 0, 0, 0, 263, 264, 5, 36, 0, 0, 264,
		265, 5, 61, 0, 0, 265, 56, 1, 0, 0, 0, 266, 267, 5, 61, 0, 0, 267, 58,
		1, 0, 0, 0, 268, 269, 5, 43, 0, 0, 269, 60, 1, 0, 0, 0, 270, 271, 5, 45,
		0, 0, 271, 62, 1, 0, 0, 0, 272, 273, 5, 42, 0, 0, 273, 64, 1, 0, 0, 0,
		274, 275, 5, 47, 0, 0, 275, 66, 1, 0, 0, 0, 276, 277, 5, 37, 0, 0, 277,
		68, 1, 0, 0, 0, 278, 279, 5, 94, 0, 0, 279, 70, 1, 0, 0, 0, 280, 281, 5,
		61, 0, 0, 281, 282, 5, 61, 0, 0, 282, 72, 1, 0, 0, 0, 283, 284, 5, 33,
		0, 0, 284, 285, 5, 61, 0, 0, 285, 74, 1, 0, 0, 0, 286, 287, 5, 60, 0, 0,
		287, 76, 1, 0, 0, 0, 288, 289, 5, 62, 0, 0, 289, 78, 1, 0, 0, 0, 290, 291,
		5, 60, 0, 0, 291, 292, 5, 61, 0, 0, 292, 80, 1, 0, 0, 0, 293, 294, 5, 62,
		0, 0, 294, 295, 5, 61, 0, 0, 295, 82, 1, 0, 0, 0, 296, 297, 5, 38, 0, 0,
		297, 298, 5, 38, 0, 0, 298, 84, 1, 0, 0, 0, 299, 300, 5, 124, 0, 0, 300,
		301, 5, 124, 0, 0, 301, 86, 1, 0, 0, 0, 302, 303, 5, 33, 0, 0, 303, 88,
		1, 0, 0, 0, 304, 305, 5, 40, 0, 0, 305, 90, 1, 0, 0, 0, 306, 307, 5, 41,
		0, 0, 307, 92, 1, 0, 0, 0, 308, 309, 5, 123, 0, 0, 309, 94, 1, 0, 0, 0,
		310, 311, 5, 125, 0, 0, 311, 96, 1, 0, 0, 0, 312, 313, 5, 91, 0, 0, 313,
		98, 1, 0, 0, 0, 314, 315, 5, 93, 0, 0, 315, 100, 1, 0, 0, 0, 316, 317,
		5, 44, 0, 0, 317, 102, 1, 0, 0, 0, 318, 319, 5, 58, 0, 0, 319, 104, 1,
		0, 0, 0, 320, 321, 5, 59, 0, 0, 321, 106, 1, 0, 0, 0, 322, 324, 3, 109,
		54, 0, 323, 322, 1, 0, 0, 0, 324, 325, 1, 0, 0, 0, 325, 323, 1, 0, 0, 0,
		325, 326, 1, 0, 0, 0, 326, 108, 1, 0, 0, 0, 327, 328, 7, 0, 0, 0, 328,
		110, 1, 0, 0, 0, 329, 338, 3, 107, 53, 0, 330, 331, 3, 107, 53, 0, 331,
		333, 5, 46, 0, 0, 332, 334, 3, 107, 53, 0, 333, 332, 1, 0, 0, 0, 333, 334,
		1, 0, 0, 0, 334, 338, 1, 0, 0, 0, 335, 336, 5, 46, 0, 0, 336, 338, 3, 107,
		53, 0, 337, 329, 1, 0, 0, 0, 337, 330, 1, 0, 0, 0, 337, 335, 1, 0, 0, 0,
		338, 346, 1, 0, 0, 0, 339, 340, 5, 110, 0, 0, 340, 347, 5, 115, 0, 0, 341,
		342, 5, 117, 0, 0, 342, 347, 5, 115, 0, 0, 343, 344, 5, 109, 0, 0, 344,
		347, 5, 115, 0, 0, 345, 347, 7, 1, 0, 0, 346, 339, 1, 0, 0, 0, 346, 341,
		1, 0, 0, 0, 346, 343, 1, 0, 0, 0, 346, 345, 1, 0, 0, 0, 347, 112, 1, 0,
		0, 0, 348, 357, 3, 107, 53, 0, 349, 350, 3, 107, 53, 0, 350, 352, 5, 46,
		0, 0, 351, 353, 3, 107, 53, 0, 352, 351, 1, 0, 0, 0, 352, 353, 1, 0, 0,
		0, 353, 357, 1, 0, 0, 0, 354, 355, 5, 46, 0, 0, 355, 357, 3, 107, 53, 0,
		356, 348, 1, 0, 0, 0, 356, 349, 1, 0, 0, 0, 356, 354, 1, 0, 0, 0, 357,
		366, 1, 0, 0, 0, 358, 359, 7, 2, 0, 0, 359, 367, 7, 3, 0, 0, 360, 361,
		7, 4, 0, 0, 361, 362, 7, 2, 0, 0, 362, 367, 7, 3, 0, 0, 363, 364, 7, 5,
		0, 0, 364, 365, 7, 2, 0, 0, 365, 367, 7, 3, 0, 0, 366, 358, 1, 0, 0, 0,
		366, 360, 1, 0, 0, 0, 366, 363, 1, 0, 0, 0, 367, 114, 1, 0, 0, 0, 368,
		369, 3, 107, 53, 0, 369, 116, 1, 0, 0, 0, 370, 371, 3, 107, 53, 0, 371,
		373, 5, 46, 0, 0, 372, 374, 3, 107, 53, 0, 373, 372, 1, 0, 0, 0, 373, 374,
		1, 0, 0, 0, 374, 378, 1, 0, 0, 0, 375, 376, 5, 46, 0, 0, 376, 378, 3, 107,
		53, 0, 377, 370, 1, 0, 0, 0, 377, 375, 1, 0, 0, 0, 378, 118, 1, 0, 0, 0,
		379, 384, 5, 34, 0, 0, 380, 383, 8, 6, 0, 0, 381, 383, 3, 121, 60, 0, 382,
		380, 1, 0, 0, 0, 382, 381, 1, 0, 0, 0, 383, 386, 1, 0, 0, 0, 384, 382,
		1, 0, 0, 0, 384, 385, 1, 0, 0, 0, 385, 387, 1, 0, 0, 0, 386, 384, 1, 0,
		0, 0, 387, 388, 5, 34, 0, 0, 388, 120, 1, 0, 0, 0, 389, 390, 5, 92, 0,
		0, 390, 399, 7, 7, 0, 0, 391, 392, 5, 92, 0, 0, 392, 393, 5, 117, 0, 0,
		393, 394, 1, 0, 0, 0, 394, 395, 7, 8, 0, 0, 395, 396, 7, 8, 0, 0, 396,
		397, 7, 8, 0, 0, 397, 399, 7, 8, 0, 0, 398, 389, 1, 0, 0, 0, 398, 391,
		1, 0, 0, 0, 399, 122, 1, 0, 0, 0, 400, 404, 7, 9, 0, 0, 401, 403, 7, 10,
		0, 0, 402, 401, 1, 0, 0, 0, 403, 406, 1, 0, 0, 0, 404, 402, 1, 0, 0, 0,
		404, 405, 1, 0, 0, 0, 405, 124, 1, 0, 0, 0, 406, 404, 1, 0, 0, 0, 407,
		408, 5, 47, 0, 0, 408, 409, 5, 47, 0, 0, 409, 413, 1, 0, 0, 0, 410, 412,
		8, 11, 0, 0, 411, 410, 1, 0, 0, 0, 412, 415, 1, 0, 0, 0, 413, 411, 1, 0,
		0, 0, 413, 414, 1, 0, 0, 0, 414, 416, 1, 0, 0, 0, 415, 413, 1, 0, 0, 0,
		416, 417, 6, 62, 0, 0, 417, 126, 1, 0, 0, 0, 418, 419, 5, 47, 0, 0, 419,
		420, 5, 42, 0, 0, 420, 424, 1, 0, 0, 0, 421, 423, 9, 0, 0, 0, 422, 421,
		1, 0, 0, 0, 423, 426, 1, 0, 0, 0, 424, 425, 1, 0, 0, 0, 424, 422, 1, 0,
		0, 0, 425, 427, 1, 0, 0, 0, 426, 424, 1, 0, 0, 0, 427, 428, 5, 42, 0, 0,
		428, 429, 5, 47, 0, 0, 429, 430, 1, 0, 0, 0, 430, 431, 6, 63, 0, 0, 431,
		128, 1, 0, 0, 0, 432, 434, 7, 12, 0, 0, 433, 432, 1, 0, 0, 0, 434, 435,
		1, 0, 0, 0, 435, 433, 1, 0, 0, 0, 435, 436, 1, 0, 0, 0, 436, 437, 1, 0,
		0, 0, 437, 438, 6, 64, 0, 0, 438, 130, 1, 0, 0, 0, 17, 0, 325, 333, 337,
		346, 352, 356, 366, 373, 377, 382, 384, 398, 404, 413, 424, 435, 1, 6,
		0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// ArcLexerInit initializes any static state used to implement ArcLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewArcLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func ArcLexerInit() {
	staticData := &ArcLexerLexerStaticData
	staticData.once.Do(arclexerLexerInit)
}

// NewArcLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewArcLexer(input antlr.CharStream) *ArcLexer {
	ArcLexerInit()
	l := new(ArcLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &ArcLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "ArcLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ArcLexer tokens.
const (
	ArcLexerFUNC                = 1
	ArcLexerTASK                = 2
	ArcLexerIF                  = 3
	ArcLexerELSE                = 4
	ArcLexerRETURN              = 5
	ArcLexerNOW                 = 6
	ArcLexerLEN                 = 7
	ArcLexerCHAN                = 8
	ArcLexerRECV_CHAN           = 9
	ArcLexerSEND_CHAN           = 10
	ArcLexerI8                  = 11
	ArcLexerI16                 = 12
	ArcLexerI32                 = 13
	ArcLexerI64                 = 14
	ArcLexerU8                  = 15
	ArcLexerU16                 = 16
	ArcLexerU32                 = 17
	ArcLexerU64                 = 18
	ArcLexerF32                 = 19
	ArcLexerF64                 = 20
	ArcLexerSTRING              = 21
	ArcLexerTIMESTAMP           = 22
	ArcLexerTIMESPAN            = 23
	ArcLexerSERIES              = 24
	ArcLexerARROW               = 25
	ArcLexerRECV                = 26
	ArcLexerDECLARE             = 27
	ArcLexerSTATE_DECLARE       = 28
	ArcLexerASSIGN              = 29
	ArcLexerPLUS                = 30
	ArcLexerMINUS               = 31
	ArcLexerSTAR                = 32
	ArcLexerSLASH               = 33
	ArcLexerPERCENT             = 34
	ArcLexerCARET               = 35
	ArcLexerEQ                  = 36
	ArcLexerNEQ                 = 37
	ArcLexerLT                  = 38
	ArcLexerGT                  = 39
	ArcLexerLEQ                 = 40
	ArcLexerGEQ                 = 41
	ArcLexerAND                 = 42
	ArcLexerOR                  = 43
	ArcLexerNOT                 = 44
	ArcLexerLPAREN              = 45
	ArcLexerRPAREN              = 46
	ArcLexerLBRACE              = 47
	ArcLexerRBRACE              = 48
	ArcLexerLBRACKET            = 49
	ArcLexerRBRACKET            = 50
	ArcLexerCOMMA               = 51
	ArcLexerCOLON               = 52
	ArcLexerSEMICOLON           = 53
	ArcLexerTEMPORAL_LITERAL    = 54
	ArcLexerFREQUENCY_LITERAL   = 55
	ArcLexerINTEGER_LITERAL     = 56
	ArcLexerFLOAT_LITERAL       = 57
	ArcLexerSTRING_LITERAL      = 58
	ArcLexerIDENTIFIER          = 59
	ArcLexerSINGLE_LINE_COMMENT = 60
	ArcLexerMULTI_LINE_COMMENT  = 61
	ArcLexerWS                  = 62
)
