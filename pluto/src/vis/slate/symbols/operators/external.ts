import {
  Add,
  Divide,
  Equal,
  GreaterThan,
  GreaterThanOrEqual,
  LessThan,
  LessThanOrEqual,
  Multiply,
  NotEqual,
  Subtract,
} from "@/vis/slate/symbols/operators/Symbols";

export const REGISTRY = {
  "operator.gt": {
    key: "operator.gt",
    name: "Greater Than",
    Form: () => null,
    Symbol: GreaterThan,
    defaultProps: () => ({}),
    Preview: GreaterThan,
    zIndex: 0,
  },
  "operator.lt": {
    key: "operator.lt",
    name: "Less Than",
    Form: () => null,
    Symbol: LessThan,
    defaultProps: () => ({}),
    Preview: LessThan,
    zIndex: 0,
  },
  "operator.eq": {
    key: "operator.eq",
    name: "Equal",
    Form: () => null,
    Symbol: Equal,
    defaultProps: () => ({}),
    Preview: Equal,
    zIndex: 0,
  },
  "operator.neq": {
    key: "operator.neq",
    name: "Not Equal",
    Form: () => null,
    Symbol: NotEqual,
    defaultProps: () => ({}),
    Preview: NotEqual,
    zIndex: 0,
  },
  "operator.gte": {
    key: "operator.gte",
    name: "Greater Than or Equal",
    Form: () => null,
    Symbol: GreaterThanOrEqual,
    defaultProps: () => ({}),
    Preview: GreaterThanOrEqual,
    zIndex: 0,
  },
  "operator.lte": {
    key: "operator.lte",
    name: "Less Than or Equal",
    Form: () => null,
    Symbol: LessThanOrEqual,
    defaultProps: () => ({}),
    Preview: LessThanOrEqual,
    zIndex: 0,
  },
  "operator.add": {
    key: "operator.add",
    name: "Add",
    Form: () => null,
    Symbol: Add,
    defaultProps: () => ({}),
    Preview: Add,
    zIndex: 0,
  },
  "operator.subtract": {
    key: "operator.subtract",
    name: "Subtract",
    Form: () => null,
    Symbol: Subtract,
    defaultProps: () => ({}),
    Preview: Subtract,
    zIndex: 0,
  },
  "operator.multiply": {
    key: "operator.multiply",
    name: "Multiply",
    Form: () => null,
    Symbol: Multiply,
    defaultProps: () => ({}),
    Preview: Multiply,
    zIndex: 0,
  },
  "operator.divide": {
    key: "operator.divide",
    name: "Divide",
    Form: () => null,
    Symbol: Divide,
    defaultProps: () => ({}),
    Preview: Divide,
    zIndex: 0,
  },
};
