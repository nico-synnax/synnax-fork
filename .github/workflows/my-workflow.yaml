name: Experimental - Build Synnax Binaries

on:
  push:
    branches:
      - experimental/nico-workflow
  workflow_dispatch:

env:
  CACHE_SCOPE: build-synnax

jobs:
  build:
    name: Build Synnax (self-hosted linux)
    runs-on: [self-hosted, linux]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Update Submodules
        run: git submodule update --init --recursive

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            gcc \
            g++ \
            cmake \
            libsystemd-dev \
            pkg-config

      - name: Setup Bazel
        uses: bazel-contrib/setup-bazel@0.15.0
        with:
          bazelisk-cache: true
          disk-cache: ${{ env.CACHE_SCOPE }}-self-hosted-linux
          repository-cache: true

      - name: Build Driver
        run: |
          bazel build --enable_platform_specific_config -c opt --config=hide_symbols --announce_rc //driver

      - name: Get Version
        id: version
        working-directory: synnax
        run: |
          echo "VERSION=$(cat pkg/version/VERSION)" >> $GITHUB_OUTPUT

      - name: Move Driver to Assets
        run: |
          mkdir -p synnax/pkg/service/hardware/embedded/assets
          cp bazel-bin/driver/driver synnax/pkg/service/hardware/embedded/assets/driver

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.work
          cache-dependency-path: go.work.sum

      - name: Download Go Dependencies
        working-directory: synnax
        run: go mod download

      - name: Build Synnax Server
        working-directory: synnax
        run: |
          go build -tags driver -o synnax-v${{ steps.version.outputs.VERSION }}-linux

      - name: Copy Binaries to Desktop
        run: |
          mkdir -p $HOME/Desktop
          rm -rf $HOME/Desktop/*
          cp bazel-bin/driver/driver $HOME/Desktop/synnax-driver-v${{ steps.version.outputs.VERSION }}-linux
          cp synnax/synnax-v${{ steps.version.outputs.VERSION }}-linux $HOME/Desktop/
          echo "Binaries created in $HOME/Desktop:"
          ls -la $HOME/Desktop/synnax-*